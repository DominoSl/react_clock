{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","printTimeTimerId","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","oldName","clockName","newName","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","changeNameTimerId","hideClock","event","preventDefault","showClock","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,MAFd,EAKEC,iBAAmB,EALrB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,iBAAmBE,OAAOC,aAAY,WACzC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAE1BM,QAAQC,KAAK,EAAKT,MAAMC,KAAKS,cAAcC,OAAO,IAAK,MACtD,OAZP,gCAeE,SAAmBC,GACjB,IAAMC,EAAUD,EAAUE,UACpBC,EAAUX,KAAKY,MAAMF,UAEvBD,IAAYE,GAEdP,QAAQS,MAAR,uBAA8BJ,EAA9B,eAA4CE,MArBlD,kCAyBE,WACEG,cAAcd,KAAKD,oBA1BvB,oBA6BE,WACE,IAAQW,EAAcV,KAAKY,MAAnBF,UACAb,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKkB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGL,IAGF,YAED,sBAAMK,UAAU,cAAhB,SACGlB,EAAKS,cAAcC,OAAO,IAAK,YA1C1C,GAA2BS,aCL3B,SAASC,IACP,IAAMC,EAAQpB,KAAKqB,MAAMC,WAAWb,OAAO,GAE3C,MAAM,SAAN,OAAgBW,GAUX,IAAMG,EAAb,4MACEzB,MAAyB,CACvBc,UAAW,UACXY,UAAU,GAHd,EAMEC,kBAAoB,EANtB,EAuBEC,UAAY,SAACC,GACXA,EAAMC,iBAEN,EAAKvB,SAAS,CAAEmB,UAAU,KA1B9B,EA6BEK,UAAY,WACV,EAAKxB,SAAS,CAAEmB,UAAU,KA9B9B,uDAQE,WAAqB,IAAD,OAClBM,SAASC,iBAAiB,QAAS7B,KAAK2B,WACxCC,SAASC,iBAAiB,cAAe7B,KAAKwB,WAE9CxB,KAAKuB,kBAAoBtB,OAAOC,aAAY,WAC1C,EAAKC,SAAS,CAAEO,UAAWO,QAC1B,QAdP,kCAiBE,WACEH,cAAcd,KAAKuB,mBACnBK,SAASE,oBAAoB,QAAS9B,KAAK2B,WAC3CC,SAASE,oBAAoB,cAAe9B,KAAKwB,aApBrD,oBAiCE,WACE,MAGIxB,KAAKJ,MAFPc,EADF,EACEA,UACAY,EAFF,EAEEA,SAGF,OACE,sBAAKP,UAAU,MAAf,UACE,6CAECO,GACC,cAAC,EAAD,CAAOZ,UAAWA,WA5C5B,GAAyBM,aCfzBe,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.d86b12ed.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  time: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    time: new Date(),\n  };\n\n  printTimeTimerId = 0;\n\n  componentDidMount() {\n    this.printTimeTimerId = window.setInterval(() => {\n      this.setState({ time: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.time.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const oldName = prevProps.clockName;\n    const newName = this.props.clockName;\n\n    if (oldName !== newName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${oldName} to ${newName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.printTimeTimerId);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { time } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {time.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\n\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype Props = {};\n\ntype State = {\n  clockName: string;\n  hasClock: boolean;\n};\n\nexport class App extends Component<Props, State> {\n  state: Readonly<State> = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  changeNameTimerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('click', this.showClock);\n    document.addEventListener('contextmenu', this.hideClock);\n\n    this.changeNameTimerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.changeNameTimerId);\n    document.removeEventListener('click', this.showClock);\n    document.removeEventListener('contextmenu', this.hideClock);\n  }\n\n  hideClock = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  showClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const {\n      clockName,\n      hasClock,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <Clock clockName={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}